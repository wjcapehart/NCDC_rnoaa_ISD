missval  = fill_value,
longname = "Mean Daily Wind Speed",
prec     = "single")
netcdf_available_variables = list.append(netcdf_available_variables,
netcdf_awnd)
}
if ("AWNDR" %in% available_datafields) {
netcdf_awdr = ncvar_def(nam      = "mean_wind_from_direction",
units    = "degrees_from",
dim      = netcdf_time_dim,
missval  = fill_value,
longname = "Mean Daily Wind Origin Direction",
prec     = "single")
netcdf_available_variables = list.append(netcdf_available_variables,
netcdf_awdr)
}
nc_ghcn = nc_create(filename = netcdf_output_file_name,
vars     = netcdf_available_variables,
force_v4 = FALSE,
verbose  = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = 0,
attname    = "Title",
attval     = paste("NCEI Data Hourly Output for ",
station_name_label,
sep=""),
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = 0,
attname    = "GHCN_Station_Code",
attval     = ncdc_id_code,
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = 0,
attname    = "Station_Name",
attval     = station_name_label,
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = 0,
attname    = "Station_Latitude",
attval     = station_latitude,
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = 0,
attname    = "Station_Longitude",
attval     = station_longitude,
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = 0,
attname    = "Station_Elevation_in_Meters",
attval     = station_altitude,
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = 0,
attname    = "featureType",
attval     = "timeSeries",
prec       = NA,
verbose    = FALSE,
definemode = FALSE)
ncatt_put(nc         = nc_ghcn,
varid      = 0,
attname    = "featureType",
attval     = "timeSeries",
prec       = NA,
verbose    = FALSE,
definemode = FALSE)
# This Crashes the RAMADDA Server's Mapping Capability
# ncatt_put(nc         = nc_ghcn,
#           varid      = 0,
#           attname    = "Conventions",
#           attval     = "CF-1.7",
#           prec       = NA,
#           verbose    = FALSE,
#           definemode = FALSE)
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_alt,
attname    = "standard_name",
attval     = "altitude",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_alt,
attname    = "description",
attval     = "Elevation",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_lon,
attname    = "standard_name",
attval     = "longitiude",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_lon,
attname    = "description",
attval     = "Longitude",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_lat,
attname    = "standard_name",
attval     = "latitude",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_lat,
attname    = "description",
attval     = "Latitude",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
if ("TMAX" %in% available_datafields) {
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_tmax,
attname    = "standard_name",
attval     = "air_temperature",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_tmax,
attname    = "cell_methods",
attval     = "time: maximum",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_tmax,
attname    = "description",
attval     = "2-m Minimium Daily Air Temperature",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
}
if ("TMIN" %in% available_datafields) {
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_tmin,
attname    = "standard_name",
attval     = "air_temperature",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_tmin,
attname    = "cell_methods",
attval     = "time: minimum",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_tmin,
attname    = "description",
attval     = "2-m Minimium Daily Air Temperature",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
}
if ("TAVG" %in% available_datafields) {
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_tavg,
attname    = "standard_name",
attval     = "air_temperature",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_tavg,
attname    = "cell_methods",
attval     = "time: mean",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_tavg,
attname    = "description",
attval     = "2-m Mean Daily Air Temperature",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
}
if ("PRCP" %in% available_datafields) {
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_prcp,
attname    = "standard_name",
attval     = "precipitation_amount",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_prcp,
attname    = "cell_methods",
attval     = "time: sum",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_prcp,
attname    = "description",
attval     = "Daily Total Precipitation",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
}
if ("SNOW" %in% available_datafields) {
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_snow,
attname    = "standard_name",
attval     = "thickness_of_snowfall_amount",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_snow,
attname    = "cell_methods",
attval     = "time: sum",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_snow,
attname    = "description",
attval     = "Daily Total Snowfall",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
}
if ("SNWD" %in% available_datafields) {
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_snwd,
attname    = "standard_name",
attval     = "surface_snow_thickness",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_snwd,
attname    = "cell_methods",
attval     = "time: point",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_snwd,
attname    = "description",
attval     = "Snow Depth on Surface",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
}
if ("WESD" %in% available_datafields) {
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_wesd,
attname    = "standard_name",
attval     = "liquid_water_content_of_surface_snow",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_wesd,
attname    = "cell_methods",
attval     = "time: point",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_wesd,
attname    = "description",
attval     = "Liquid Snow Water Equivalent Depth on Surface",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
}
if ("WSEF" %in% available_datafields) {
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_wesf,
attname    = "standard_name",
attval     = "snowfall_amount",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_wesf,
attname    = "cell_methods",
attval     = "time: sum",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_wesf,
attname    = "description",
attval     = "Liquid Snowfall Water Equivalent",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
}
if ("AWND" %in% available_datafields) {
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_awnd,
attname    = "standard_name",
attval     = "average_wind_speed",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_awnd,
attname    = "cell_methods",
attval     = "time: mean",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_awnd,
attname    = "description",
attval     = "Mean Daily Wind Speed",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
}
if ("AWDR" %in% available_datafields) {
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_awdr,
attname    = "standard_name",
attval     = "wind_from_direction",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_awdr,
attname    = "cell_methods",
attval     = "time: mean",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
ncatt_put(nc         = nc_ghcn,
varid      = netcdf_awdr,
attname    = "description",
attval     = "Mean Daily Wind Origin Direction",
prec       = NA,
verbose    = FALSE,
definemode = FALSE )
}
ncvar_put(nc      = nc_ghcn,
varid   = netcdf_lat,
vals    = station_latitude,
verbose = FALSE )
remove(netcdf_lat,
station_latitude)
ncvar_put(nc      = nc_ghcn,
varid   = netcdf_lon,
vals    = station_longitude,
verbose = FALSE )
remove(netcdf_lon,
station_longitude)
ncvar_put(nc      = nc_ghcn,
varid   = netcdf_alt,
vals    = station_altitude,
verbose = FALSE )
ncvar_put(nc      = nc_ghcn,
varid   = netcdf_stn,
vals    = file_title_string,
verbose = FALSE )
remove(netcdf_alt,
station_altitude)
if ("TMAX" %in% available_datafields) {
ncvar_put(nc      = nc_ghcn,
varid   = netcdf_tmax,
vals    = tmax,
verbose = FALSE )
remove(netcdf_tmax,
tmax)
}
if ("TMIN" %in% available_datafields) {
ncvar_put(nc      = nc_ghcn,
varid   = netcdf_tmin,
vals    = tmin,
verbose = FALSE )
remove(netcdf_tmin,
tmin)
}
if ("TAVG" %in% available_datafields) {
ncvar_put(nc      = nc_ghcn,
varid   = netcdf_tavg,
vals    = tavg,
verbose = FALSE )
remove(netcdf_tavg,
tavg)
}
if ("PRCP" %in% available_datafields) {
ncvar_put(nc      = nc_ghcn,
varid   = netcdf_prcp,
vals    = prcp,
verbose = FALSE )
remove(netcdf_prcp,
prcp)
}
if ("SNOW" %in% available_datafields) {
ncvar_put(nc      = nc_ghcn,
varid   = netcdf_snow,
vals    = snow,
verbose = FALSE )
remove(netcdf_snow,
snow)
}
if ("SNWD" %in% available_datafields) {
ncvar_put(nc      = nc_ghcn,
varid   = netcdf_snwd,
vals    = snwd,
verbose = FALSE )
remove(netcdf_snwd,
snwd)
}
if ("WESD" %in% available_datafields) {
ncvar_put(nc      = nc_ghcn,
varid   = netcdf_wesd,
vals    = wesd,
verbose = FALSE )
remove(netcdf_wesd,
wesd)
}
if ("WESF" %in% available_datafields) {
ncvar_put(nc      = nc_ghcn,
varid   = netcdf_wesf,
vals    = wesf,
verbose = FALSE )
remove(netcdf_wesf,
wesf)
}
if ("AWND" %in% available_datafields) {
ncvar_put(nc      = nc_ghcn,
varid   = netcdf_awnd,
vals    = awnd,
verbose = FALSE )
remove(netcdf_awnd,
awnd)
}
if ("AWDR" %in% available_datafields) {
ncvar_put(nc      = nc_ghcn,
varid   = netcdf_awdr,
vals    = awnd,
verbose = FALSE )
remove(netcdf_awdr,
awdr)
}
nc_close( nc_ghcn )
remove(nc_ghcn,
netcdf_time_dim)
print("--------------------------")
print(paste("Station # ",
ncdc_index,
" of ",
total_number_of_stations,
sep = ""))
print(filename_station_label)
print(available_datafields)
remove(Date,
Days_from_1970_01_01,
available_datafields,
file_title_string,
filename_ghcn_label,
filename_station_label,
fill_value,
ghcn_station_code,
ncdc_end_yymmdd,
ncdc_start_yymmdd,
netcdf_available_variables,
output_file_name,
ncdc_id_code,
netcdf_output_file_name,
station_name_label)
netcdf_output_file_name = paste(file_title_string,
".nc",
sep="")
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
netcdf_output_file_name = paste(file_title_string,
".nc",
sep="")
print(ncdc_ids)
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
available_datafields
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
warnings()
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
source('~/GitHub/NCDC_rnoaa_ISD/rnoaa_GHCN_csv_netcdf_loop.R')
